# Generated Cmake Pico project file

cmake_minimum_required(VERSION 3.13)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Initialise pico_sdk from installed location
# (note this can come from environment, CMake cache etc)

# == DO NEVER EDIT THE NEXT LINES for Raspberry Pi Pico VS Code Extension to work ==
if(WIN32)
    set(USERHOME $ENV{USERPROFILE})
else()
    set(USERHOME $ENV{HOME})
endif()
set(sdkVersion 2.0.0)
set(toolchainVersion 13_2_Rel1)
set(picotoolVersion 2.0.0)
include(${USERHOME}/.pico-sdk/cmake/pico-vscode.cmake)
# ====================================================================================
set(PICO_BOARD pico2 CACHE STRING "Board type")

# Force picotool to be fetched and built automatically to avoid version conflicts
set(PICOTOOL_FORCE_FETCH_FROM_GIT ON CACHE BOOL "Force fetch picotool from git" FORCE)

# Pull in Raspberry Pi Pico SDK (must be before project)
include(pico-sdk/pico_sdk_init.cmake)

if (PICO_SDK_VERSION_STRING VERSION_LESS "1.4.0")
  message(FATAL_ERROR "Raspberry Pi Pico SDK version 1.4.0 (or later) required. Your version is ${PICO_SDK_VERSION_STRING}")
endif()

project(rm3100 C CXX ASM)

# Initialise the Raspberry Pi Pico SDK
pico_sdk_init()



# Add executable. Default name is the project name, version 0.1
add_executable(rm3100 rm3100.cpp)

pico_set_program_name(rm3100 "rm3100-driver")
pico_set_program_version(rm3100 "0.1")

# Modify the below lines to enable/disable output over UART/USB
pico_enable_stdio_uart(rm3100 0)
pico_enable_stdio_usb(rm3100 1)

# Add the standard library to the build
target_link_libraries(rm3100
        pico_stdlib
        hardware_spi
        hardware_gpio)

# Add the standard include files to the build
target_include_directories(rm3100 PRIVATE
  ${CMAKE_CURRENT_LIST_DIR}
  ${CMAKE_CURRENT_LIST_DIR}/.. # for our common lwipopts or any other standard includes, if required
)

pico_add_extra_outputs(rm3100)

# Add a custom target to make picotool easily accessible
add_custom_target(flash
    COMMAND picotool load rm3100.uf2 -f
    DEPENDS rm3100
    COMMENT "Flashing rm3100.uf2 to Pico"
)

add_custom_target(info
    COMMAND picotool info
    COMMENT "Getting Pico device info"
)